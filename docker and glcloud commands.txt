// create the pom file.  it will generate the jar file
Maven install

// now create the container in Docker.  This will use the Dockerfile to push the image into docker
// this is a local copy only
//docker build -t weatherimage .

// this is from hellonode sample: https://cloud.google.com/container-engine/docs/tutorials/hello-node
// run this in the cloud
gcloud config set project keen-hope-175917
gcloud config set compute/zone us-east1-c

// build and tag the container on the google repository
docker build -t gcr.io/keen-hope-175917/weathermaintenance:v1 .

// list out images to see it
docker images

// now we need to push it to gcloud when ready
// may need to temporarily rename config.json in the .docker folder to get this to work
gcloud docker -- push gcr.io/keen-hope-175917/weathermaintenance:v1

// run this LOCALLY from the C:\Users\knobloct\IdeaProjects\weatherDataCollector\ to test it out
// see this link for cleaning up containers: https://tecadmin.net/remove-docker-images-and-containers/
// OPTIONAL
docker run --rm -p 8081:8081 gcr.io/keen-hope-175917/weathermaintenance:v1

// create cluster in cloud
gcloud container clusters create weather-cluster --num-nodes=3
// NOTE!!!! if you create clusters in google, you can use the smaller cpu/size.  That's fine but then need to run this:
gcloud container clusters get-credentials <CLUSTER NAME GOES HERE>

// now deploy the image
kubectl run weather-maintenance-container --image=gcr.io/keen-hope-175917/weathermaintenance:v1 --port 8081

// get the running pods
kubectl get pods

// it's running now but needs to have an IP exposed
kubectl expose deployment weather-container --type=LoadBalancer --port 8080
// now get the exposed IP
kubectl get service

// scale up to all 3 containers
kubectl scale deployment weather-maintenance-container --replicas=3

//update version
docker build -t gcr.io/keen-hope-175917/weathermaintenance:v2 .
gcloud docker -- push gcr.io/keen-hope-175917/weathermaintenance:v2
kubectl set image deployment/weather-maintenance-container weather-maintenance-container=gcr.io/keen-hope-175917/weathermaintenance:v2

// info
kubectl get deployment hello-world
kubectl get pods

// delete an active pod
kubectl get pods
kubectl delete pods <POD NAME>
// it will restart it